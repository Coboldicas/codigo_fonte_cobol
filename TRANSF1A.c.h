/* Generated by           cobc 4.0-early-dev.0 */
/* Generated from         TRANSF1A.cbl */
/* Generated at           ago 22 2025 22:24:07 */
/* GnuCOBOL build date    Sep 19 2022 04:28:17 */
/* GnuCOBOL package date  Jun 06 2020 20:56:36 UTC */
/* Compile command        cobc -x -g TRANSF1A.cbl */


/* Module path */
static const char		*cob_module_path = NULL;

/* Picture strings */

static const cob_pic_symbol p_1[] = {
	{'9', 9},
	{'.', 1},
	{'9', 2},
	{'\0', 1}
};


/* Attributes */

static const cob_field_attr a_1 =	{0x21,   0,   0, 0x1000, NULL};
static const cob_field_attr a_2 =	{0x21,   0,   0, 0x0000, NULL};
static const cob_field_attr a_3 =	{0x10,  11,   2, 0x0000, NULL};
static const cob_field_attr a_4 =	{0x24,  11,   0, 0x0000, p_1};
static const cob_field_attr a_5 =	{0x01,   0,   0, 0x0000, NULL};
static const cob_field_attr a_6 =	{0x11,   4,   0, 0x0821, NULL};
static const cob_field_attr a_7 =	{0x10,  10,   0, 0x0000, NULL};
static const cob_field_attr a_8 =	{0x11,   9,   0, 0x0001, NULL};
static const cob_field_attr a_9 =	{0x10,   1,   0, 0x1000, NULL};

static const cob_field_attr cob_all_attr = {0x22, 0, 0, 0, NULL};


/* Constants */
static const cob_field c_1	= {6, (cob_u8_ptr)"ERRO: ", &a_1};
static const cob_field c_2	= {37, (cob_u8_ptr)"Transfer\303\252ncia realizada com sucesso.", &a_1};
static const cob_field c_3	= {8, (cob_u8_ptr)"Origem: ", &a_1};
static const cob_field c_4	= {14, (cob_u8_ptr)"  Novo saldo: ", &a_1};
static const cob_field c_5	= {9, (cob_u8_ptr)"Destino: ", &a_1};
static const cob_field c_6	= {13, (cob_u8_ptr)" Novo saldo: ", &a_1};
static const cob_field c_7	= {7, (cob_u8_ptr)"Falha: ", &a_1};
static const cob_field c_8	= {39, (cob_u8_ptr)"ERRO NA CHAMADA PROGDATA. RETURN-CODE: ", &a_1};
static const cob_field c_9	= {51, (cob_u8_ptr)"DIGITE NUMERO DA CONTA DE ORIGEM(A) [10 d\303\255gitos]: ", &a_1};
static const cob_field c_10	= {51, (cob_u8_ptr)"DIGITE NUMERO DA CONTA DESTINO(B) [10 d\303\255gitos]:   ", &a_1};
static const cob_field c_11	= {50, (cob_u8_ptr)"INFORME O VALOR DE TRANSFERENCIA (ex: 100.00):    ", &a_1};
static const cob_field c_12	= {41, (cob_u8_ptr)"Contas iguais (A deve ser diferente de B)", &a_1};
static const cob_field c_13	= {41, (cob_u8_ptr)"Valor deve ser > 0. Formato: 000000100.00", &a_1};
static const cob_field c_14	= {20, (cob_u8_ptr)"0005-CARREGAR-CONTAS", &a_1};
static const cob_field c_15	= {13, (cob_u8_ptr)"F-NUM-CONTA: ", &a_1};
static const cob_field c_16	= {12, (cob_u8_ptr)"WS-CONTA-A: ", &a_1};
static const cob_field c_17	= {12, (cob_u8_ptr)"WS-CONTA-B: ", &a_1};
static const cob_field c_18	= {13, (cob_u8_ptr)"ENCONTROU-A: ", &a_1};
static const cob_field c_19	= {13, (cob_u8_ptr)"ENCONTROU-B: ", &a_1};
static const cob_field c_20	= {30, (cob_u8_ptr)"Conta A inexistente no arquivo", &a_1};
static const cob_field c_21	= {30, (cob_u8_ptr)"Conta B inexistente no arquivo", &a_1};
static const cob_field c_22	= {21, (cob_u8_ptr)"0006-PROCESSAR-TRANSF", &a_1};
static const cob_field c_23	= {29, (cob_u8_ptr)"Saldo insuficiente na conta A", &a_1};
static const cob_field c_24	= {13, (cob_u8_ptr)"VALOR ANTES: ", &a_1};
static const cob_field c_25	= {29, (cob_u8_ptr)"Erro aritm\303\251tico ao debitar A", &a_1};
static const cob_field c_26	= {14, (cob_u8_ptr)"VALOR DEPOIS: ", &a_1};
static const cob_field c_27	= {30, (cob_u8_ptr)"Erro aritm\303\251tico ao creditar B", &a_1};
static const cob_field c_28	= {22, (cob_u8_ptr)"0007-ATUALIZAR-ARQUIVO", &a_1};
static const cob_field c_29	= {1, (cob_u8_ptr)"|", &a_1};
static const cob_field c_30	= {5, (cob_u8_ptr)"CONTA", &a_1};
static const cob_field c_31	= {4, (cob_u8_ptr)"NOME", &a_1};
static const cob_field c_32	= {5, (cob_u8_ptr)"SALDO", &a_1};
static const cob_field c_33	= {11, (cob_u8_ptr)"SALDO EDIT ", &a_1};
static const cob_field c_34	= {5, (cob_u8_ptr)"WRITE", &a_1};
static const cob_field c_35	= {15, (cob_u8_ptr)"FD-SAI-LINHA : ", &a_1};
static const cob_field c_36	= {12, (cob_u8_ptr)"DEPOIS WRITE", &a_1};
static const cob_field c_37	= {2, (cob_u8_ptr)"OK", &a_1};
static const cob_field c_38	= {15, (cob_u8_ptr)"0008-GRAVAR-LOG", &a_1};
static const cob_field c_39	= {3, (cob_u8_ptr)"LOG", &a_1};
static const cob_field c_40	= {5, (cob_u8_ptr)"write", &a_1};
static const cob_field c_41	= {12, (cob_u8_ptr)"depois write", &a_1};
static const cob_field c_42	= {18, (cob_u8_ptr)"0009-LER-CONTA-ENT", &a_1};
static const cob_field c_43	= {7, (cob_u8_ptr)"LEU ARQ", &a_1};
static const cob_field c_44	= {13, (cob_u8_ptr)"FIM-ARQUIVO: ", &a_1};
static const cob_field c_45	= {11, (cob_u8_ptr)"SAI LEU ARQ", &a_1};
static const cob_field c_46	= {15, (cob_u8_ptr)"FIM DE PROGRAMA", &a_1};
static const cob_field c_47	= {1, (cob_u8_ptr)"0", &a_9};
static const cob_field c_48	= {12, (cob_u8_ptr)"CONTAENT.dat", &a_1};
static const cob_field c_49	= {12, (cob_u8_ptr)"CONTASAI.dat", &a_1};
static const cob_field c_50	= {10, (cob_u8_ptr)"TXTLOG.dat", &a_1};

static cob_field cob_all_zero	= {1, (cob_u8_ptr)"0", &cob_all_attr};


/* Strings */
static const char st_1[]	= "PERFORM";
static const char st_2[]	= "IF";
static const char st_3[]	= "DISPLAY";
static const char st_4[]	= "MOVE";
static const char st_5[]	= "EXIT";
static const char st_6[]	= "CALL";
static const char st_7[]	= "STOP RUN";
static const char st_8[]	= "ACCEPT";
static const char st_9[]	= "SET";
static const char st_10[]	= "OPEN";
static const char st_11[]	= "READ";
static const char st_12[]	= "CLOSE";
static const char st_13[]	= "EXIT PARAGRAPH";
static const char st_14[]	= "SUBTRACT";
static const char st_15[]	= "ADD";
static const char st_16[]	= "UNSTRING";
static const char st_17[]	= "EVALUATE";
static const char st_18[]	= "WHEN";
static const char st_19[]	= "CONTINUE";
static const char st_20[]	= "STRING";
static const char st_21[]	= "WRITE";


/* Source file names */
static const char *st_source_files[]	= { "" 
		,"TRANSF1A.cbl"};

static int COB_INLINE COB_A_INLINE
cob_get_numdisp (const void *data, const int size)
{
	register const unsigned char	*p;
	register int	n;
	register int 	retval = 0;
	p = (const unsigned char *)data;
	for (n = 0; n < size; ++n, ++p) {
		if (*p > '0' && *p <= '9')
	       break;
	}
	for (; n < size; ++n, ++p) {
   	retval = (retval * 10)
   	       + ((*p > '0' && *p <= '9') ? (*p - '0') : 0);
	}
	return retval;
}


static COB_INLINE COB_A_INLINE int
cob_cmpswp_s16 (const void *p, const cob_s64_t n)
{
	short	val;
	val = COB_BSWAP_16 (*(short *)p);
	return (val < n) ? -1 : (val > n);
}

